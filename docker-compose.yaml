services:
  db:
    image: postgres:17-alpine
    env_file: .env
    ports:
      - "5432"
    # mount dbdata to a named volume
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d artchive_1"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  frontend:
    build:
      dockerfile: frontend/Dockerfile
      context: .
    ports: 
      - "5173:5173"
    volumes: 
      # mount frontend files to a volume so that live reload works
      - ./frontend:/frontend/
      # mount node_modules to an anonymous volume so that the volume above doesn't replace container node_modules
      - /frontend/node_modules
  
  backend:
    build:
      dockerfile: backend/Dockerfile
      context: .
    env_file: .env
    ports: 
      - "8000:8000"
    volumes:
      - ./backend:/backend/
      # mount installed packages to an anonymous volume so that pip install does not freak up!
      - /usr/local/lib/python3.12/site-packages
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy

volumes:
  dbdata:
  
# docker-compose up -d 
# docker-compose --env-file ./backend/.env up