openapi: 3.0.3
info:
  title: ArtChive API
  version: 1.0.0
  description: This serves as the official API documentation of ArtChive's API. Do
    not reproduce, and do not distribute. For internal usage only.
paths:
  /api/account/token/:
    post:
      operationId: account_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/account/token/refresh/:
    post:
      operationId: account_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/post/:
    get:
      operationId: post_list
      tags:
      - post
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostView'
          description: ''
  /api/post/{post_id}/:
    get:
      operationId: post_retrieve
      parameters:
      - in: path
        name: post_id
        schema:
          type: integer
        required: true
      tags:
      - post
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostView'
          description: ''
  /api/post/create/:
    post:
      operationId: post_create_create
      tags:
      - post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCreate'
          description: ''
components:
  schemas:
    NovelPost:
      type: object
      properties:
        chapter:
          type: integer
          maximum: 2147483647
          minimum: 0
        content:
          type: string
      required:
      - chapter
      - content
    PostCreate:
      type: object
      properties:
        post_id:
          type: integer
          readOnly: true
        image_url:
          type: string
          format: uri
          writeOnly: true
          nullable: true
          pattern: (?:jpg|jpeg|png|gif)$
        video_url:
          type: string
          format: uri
          writeOnly: true
          nullable: true
          pattern: (?:mp4|mov|avi|webm|mkv)$
        chapter:
          type: integer
          writeOnly: true
          nullable: true
        content:
          type: string
          writeOnly: true
        description:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        post_type:
          $ref: '#/components/schemas/PostTypeEnum'
        author:
          type: integer
      required:
      - author
      - created_at
      - description
      - post_id
      - post_type
      - updated_at
    PostTypeEnum:
      enum:
      - default
      - novel
      - photo
      - video
      type: string
      description: |-
        * `default` - default
        * `novel` - novel
        * `photo` - photo
        * `video` - video
    PostView:
      type: object
      properties:
        post_id:
          type: integer
          readOnly: true
        novel_post:
          type: array
          items:
            $ref: '#/components/schemas/NovelPost'
        description:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        image_url:
          type: string
          format: uri
          nullable: true
        video_url:
          type: string
          format: uri
          nullable: true
        post_type:
          $ref: '#/components/schemas/PostTypeEnum'
        author:
          type: integer
      required:
      - author
      - created_at
      - description
      - novel_post
      - post_id
      - post_type
      - updated_at
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
