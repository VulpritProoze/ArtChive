# Generated by Django 5.2.3 on 2025-08-21 08:07

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('collective', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ArtChallenge',
            fields=[
                ('challenge_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=512)),
                ('description', models.CharField(max_length=4096)),
                ('details', models.TextField()),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('brush_drip_reward', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TrophyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trophy', models.CharField(max_length=100)),
                ('brush_drip_value', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ArtChallengeParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('challenge_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='post.artchallenge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('event_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=512)),
                ('description', models.CharField(max_length=4096)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('details', models.TextField()),
                ('collective', models.ForeignKey(default='00000000-0000-0000-0000-000000000001', on_delete=django.db.models.deletion.CASCADE, related_name='event', to='collective.collective')),
            ],
        ),
        migrations.CreateModel(
            name='EventComment',
            fields=[
                ('event_comment_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='event_comment', to=settings.AUTH_USER_MODEL)),
                ('event_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='event_comment', to='post.event')),
                ('replying_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='post.eventcomment')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('post_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image_url', models.ImageField(blank=True, null=True, upload_to='posts/images/')),
                ('video_url', models.FileField(blank=True, null=True, upload_to='posts/videos/')),
                ('post_type', models.CharField(choices=[('default', 'default'), ('novel', 'novel'), ('photo', 'photo'), ('video', 'video')], max_length=100)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post', to=settings.AUTH_USER_MODEL)),
                ('collective', models.ForeignKey(default='00000000-0000-0000-0000-000000000001', on_delete=django.db.models.deletion.CASCADE, related_name='post', to='collective.collective')),
            ],
        ),
        migrations.CreateModel(
            name='NovelPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter', models.PositiveIntegerField()),
                ('content', models.TextField()),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='novel_post', to='post.post')),
            ],
        ),
        migrations.CreateModel(
            name='Critique',
            fields=[
                ('critique_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('impression', models.CharField(choices=[('positive', 'positive'), ('negative', 'negative'), ('neutral', 'neutral')], max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_critique', to=settings.AUTH_USER_MODEL)),
                ('replying_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='post.critique')),
                ('post_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_critique', to='post.post')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comment_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_comment', to=settings.AUTH_USER_MODEL)),
                ('post_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_comment', to='post.post')),
            ],
        ),
        migrations.CreateModel(
            name='PostHeart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hearted_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_heart', to=settings.AUTH_USER_MODEL)),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_heart', to='post.post')),
            ],
        ),
        migrations.CreateModel(
            name='PostPraise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('praised_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_praise', to=settings.AUTH_USER_MODEL)),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_praise', to='post.post')),
            ],
        ),
        migrations.CreateModel(
            name='PostTrophy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('awarded_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_trophy', to=settings.AUTH_USER_MODEL)),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_trophy', to='post.post')),
                ('post_trophy_type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='post_trophy', to='post.trophytype')),
            ],
        ),
    ]
